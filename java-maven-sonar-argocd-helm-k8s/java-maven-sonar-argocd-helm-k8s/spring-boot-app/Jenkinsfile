pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        } // Close the docker block
    }
    stages {
        stage('Code Checkout') {
            steps {
                echo 'Code checkout'
                git branch: 'main', url: 'https://github.com/Deepth1-253/cicd-pipeline.git'
            }
        }

        stage('Build and Test') {
            steps {
                echo 'Build and Test'
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://54.91.110.22:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'sonarqube')]) {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        mvn sonar:sonar -Dsonar.login=$sonarqube -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Push the Docker Image') {
            environment {
                DOCKER_IMAGE = "deepb023/ultimate-cicd:${BUILD_NUMBER}"
                DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
            }
            steps {
                echo 'Pushing the docker image'
                script {
                    docker.build("${DOCKER_IMAGE}", "${DOCKERFILE_LOCATION}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "cicd-pipeline"
                GIT_USER_NAME = "Deepth1-253"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "deepthibondalapati253@gmail.com"
                        git config user.name "Deepth1-253"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Updating the deployment file with new image tag ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    } // Close the stages block
} // Close the pipeline block
